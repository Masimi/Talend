package routines;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Encrypt {

    /**
     * SHA1: return value crypted.
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("texto") input: The string need to be encrypted.
     * 
     * {example} SHA1("world") # return -> 7c211433f02071597741e6ff5a8ea34789abbf43
     */
    public static String SHA1(String str) throws NoSuchAlgorithmException {
        MessageDigest mDigest = MessageDigest.getInstance("SHA1");

        byte[] result = mDigest.digest(str.getBytes());

        StringBuffer sb = new StringBuffer();

        for(int i = 0; i < result.length; i++) {
            sb.append(Integer.toString((result[i]&0xff) + 0x100, 16).substring(1));

           // System.out.print(result[i]);
        }
        //System.out.print(sb.toString());
        return sb.toString();
    }
}
